{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "GrowUP API"
  },
  "host": "localhost:3001",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "API for users. Example how use Swagger"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/company": {
      "post": {
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            },
            "required": true,
            "description": "Company credentials"
          }
        ],
        "tags": ["Company"],
        "summary": "Create new company",
        "responses": {
          "200": {
            "description": "Returns token and company if everything is ok.",
            "schema": {
              "$ref": "#/definitions/Company"
            }
          },
          "404": {
            "description": "Returns error if data is invalid.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "body": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "required": true,
            "description": "Company credentials"
          }
        ],
        "tags": ["Company"],
        "summary": "Create new company",
        "responses": {
          "200": {
            "description": "Returns token and company if everything is ok.",
            "schema": {
              "$ref": "#/definitions/Company"
            }
          },
          "404": {
            "description": "Returns error if data is invalid.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                }
              }
            },
            "required": true,
            "description": "User credentials"
          }
        ],
        "tags": ["Users"],
        "summary": "Create new user",
        "responses": {
          "200": {
            "description": "Returns token if everything is ok. Token contains userId and role. It expires in 24h.",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "404": {
            "description": "Returns error if data is invalid.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            },
            "required": true,
            "description": "User credentials"
          }
        ],
        "tags": ["Users"],
        "summary": "Authenticate user",
        "responses": {
          "200": {
            "description": "Returns token if eveeyrthing is ok. Token contains userId and role. It expires in 24h.",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "404": {
            "description": "Returns error if credentials are invalid.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "parameters": [
          {
            "name": "refreshToken",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "refreshToken": {
                  "type": "string"
                }
              }
            },
            "required": true,
            "description": "The refresh token"
          }
        ],
        "tags": ["Users"],
        "summary": "Use a refresh token to generate a new JWT token and a new refresh token",
        "responses": {
          "200": {
            "description": "Returns token if everything is ok. Token contains userId and jwt. It expires in 7d.",
            "schema": {
              "$ref": "#/definitions/RefreshToken"
            }
          },
          "404": {
            "description": "Returns error if token are invalid.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/company/tags": {
      "get": {
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string"
            },
            "description": "JWT Token"
          }
        ],
        "tags": ["Tags"],
        "summary": "Fetching tags",
        "responses": {
          "200": {
            "description": "Returns array of tag objects with company id they are related to",
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        }
      },
      "post": {
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string"
            },
            "description": "JWT Token"
          },
          {
            "in": "body",
            "name": "Tags",
            "schema": {
              "type": "object",
              "name": "tags",
              "properties": {
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "required": true,
            "descsription": "Name of all new tagss"
          }
        ],
        "tags": ["Tags"],
        "summary": "Creating new tags",
        "responses": {
          "200": {
            "description": "Returns array of tag objects with company id they are related to",
            "schema": {
              "type": "object",
              "properties": {
                "tags": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Tag"
                  }
                },
                "existingTags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/company/tags/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string"
            },
            "description": "JWT Token"
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "descsription": "Tag id you want to delete"
          }
        ],
        "tags": ["Tags"],
        "summary": "Delete tag by id",
        "responses": {
          "200": {
            "description": "Return status of deletion",
            "schema": {
              "properties": {
                "status": {
                  "type": "string",
                  "default": "success"
                },
                "message": {
                  "type": "string",
                  "default": "Tag was deleted successfully"
                }
              }
            }
          }
        }
      }
    },
    "/api/user": {
      "get": {
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string"
            },
            "description": "JWT Token"
          }
        ],
        "tags": ["Users", "Profile"],
        "summary": "Gets user info",
        "responses": {
          "200": {
            "description": "Returns user information",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/api/user/avatar": {
      "put": {
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string"
            },
            "description": "JWT Token"
          },
          {
            "in": "formData",
            "name": "avatar",
            "type": "file",
            "description": "New avatar"
          }
        ],
        "tags": ["Users", "Profile"],
        "summary": "Updates user avatar",
        "responses": {
          "200": {
            "description": "Returns updated user",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/api/career-path": {
      "post": {
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string"
            },
            "description": "JWT Token"
          },
          {
            "in": "body",
            "name": "Career Path",
            "schema": {
              "type": "object",
              "properties": {
                "domain": {
                  "type": "string"
                },
                "level": {
                  "$ref": "#/definitions/RequestLevel"
                }
              }
            }
          }
        ],
        "tags": ["Career path"],
        "summary": "Creating new career path",
        "responses": {
          "200": {
            "description": "Returns domain name and nested levels",
            "schema": {
              "type": "object",
              "properties": {
                "domain": {
                  "$ref": "#/definitions/Domain"
                },
                "level": {
                  "$ref": "#/definitions/ResponseLevel"
                }
              }
            }
          }
        }
      }
    },
    "/api/career-path/{id}": {
      "get": {
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string"
            },
            "description": "JWT Token",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "descsription": "Career id you want to retrieve"
          }
        ],
        "tags": ["Career path"],
        "summary": "Returns domain name and domain levels",
        "responses": {
          "200": {
            "description": "Returns domain name and nested levels",
            "schema": {
              "type": "object",
              "properties": {
                "domain": {
                  "$ref": "#/definitions/Domain"
                },
                "level": {
                  "$ref": "#/definitions/ResponseLevel"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Company": {
      "required": ["token"],
      "properties": {
        "token": {
          "type": "string"
        },
        "company": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "deletedAt": {
              "type": "string",
              "nullable": true,
              "default": null
            },
            "createdAt": {
              "type": "string"
            },
            "updatedAt": {
              "type": "string",
              "nullable": true,
              "default": null
            }
          }
        }
      }
    },
    "Token": {
      "required": ["token"],
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "RefreshToken": {
      "required": ["refreshToken"],
      "properties": {
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "Error": {
      "properties": {
        "success": {
          "type": "boolean",
          "default": "false"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Tag": {
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "companyId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "deletedAt": {
          "type": "string"
        }
      }
    },
    "User": {
      "properties": {
        "id": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "deletedAt": {
          "type": "string"
        }
      }
    },
    "Domain": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "uuid"
        },
        "name": {
          "type": "string",
          "description": "Domain name",
          "example": "Fullstack Developer"
        },
        "createdAt": {
          "type": "string",
          "description": "Time the object was created at"
        },
        "updatedAt": {
          "type": "string",
          "description": "Time the object was updated at. By default it is the same as the creation time"
        },
        "deletedAt": {
          "type": "string",
          "description": "Time the object was deletedAt"
        }
      }
    },
    "ResponseLevel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "uuid"
        },
        "name": {
          "type": "string",
          "description": "Domain name",
          "example": "Fullstack Developer"
        },
        "createdAt": {
          "type": "string",
          "description": "Time the object was created at"
        },
        "updatedAt": {
          "type": "string",
          "description": "Time the object was updated at. By default it is the same as the creation time"
        },
        "deletedAt": {
          "type": "string",
          "description": "Time the object was deletedAt"
        },
        "nextLevel": {
          "$ref": "#/definitions/ResponseLevel",
          "description": "Next level of the current one"
        }
      }
    },
    "RequestLevel": {
      "type": "object",
      "properties": {
        "YOUR LEVEL NAME": {
          "type": "object",
          "properties": {
            "YOUR CATEGORY NAME": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "$ref": "#/definitions/Career Path Type"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Career Path Type": {
      "type": "string",
      "enum": ["Hard skills", "Soft skills", "Language"]
    }
  }
}
